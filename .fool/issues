1/3DES/git@74th.de/Task/open/0.x/each history entry should get current git tag or branch if it exists
2/3DES/git@74th.de/Task/open/0.x/maybe an autorepair function in certein cases would be nice
3/3DES/git@74th.de/Task/open/0.x/global variables should be put in own 'internal' package
4/3DES/git@74th.de/Task/open/0.x/there is a lot of duplicated code that should be cleaned up
5/3DES/git@74th.de/Task/open/0.3/any kind of sort function could be useful
6/3DES/git@74th.de/Bug/closed/0.1a/bug within ls command when -l and -m parameters has been used
7/3DES/git@74th.de/Task/closed/0.2/put git-fool under GPLv2 before making it available to the rest of the world
8/3DES/git@74th.de/Task/open/0.x/colorize output to make it more readable
9/3DES/git@74th.de/Task/closed/0.x/a possibility to grep through all issues' comments would be helpful
10/3DES/git@74th.de/Task/closed/0.3/when user calls init write sth. on screen, e.g. 'initialized new tracker in <path>'
11/3DES/git@74th.de/Task/closed/0.3/user input line should be editable, use Term::ReadLine::Gnu for this job
12/3DES/git@74th.de/Task/open/0.3/refactoring so that issue line becomes more flexible
13/3DES/git@74th.de/Task/open/0.x/we need priority support as separate issue line entry
14/3DES/git@74th.de/Task/open/0.3/new command 'mv' that moves the issue to another person, the responsible one
15/3DES/git@74th.de/Task/open/0.3/'git fool new' inside a new empty repository shows unwanted error messages because git-fool tries to determine current checkout
16/3DES/git@74th.de/Task/open/0.3/issues file should get a version identifyer in first line to see if it compatible with current version and e.g. to give an update script the possibility to update an old issue file version to make it useable with a newer version of git-fool
